<div class="page-body">
    <div class="container-fluid">
        <div class="row pb-sm-4 pt-sm-4">
            <div class="col-md-12 mb-4">
                <div class="card">
                    <div class="card-header py-3 d-flex justify-content-between align-items-center">
                        <h6 class="m-0 font-weight-bold text-primary" id="chatTitle">Chat Details</h6>
                        <div>
                            <a href="/histories" class="btn btn-sm btn-secondary me-2">
                                <i class="fas fa-arrow-left"></i> Back to History
                            </a>
                            <a href="/ai-chat" class="btn btn-sm btn-primary">
                                <i class="fas fa-plus"></i> New Chat
                            </a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div id="loadingIndicator" class="text-center py-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-2">Loading chat history...</p>
                        </div>
                        
                        <div id="chatContainer" class="d-none" style="min-height: 65vh; overflow-y: auto;">
                        </div>
                        
                        <div id="errorContainer" class="alert alert-danger d-none">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <span id="errorMessage">Error loading chat history.</span>
                        </div>
                        <div id="continueChat" class="mt-4 pt-3 border-top d-none">
                            <div class="d-flex align-items-center mb-2">
                                <div class="me-2">
                                    <select class="form-select form-select-sm" id="modelSelect">
                                        <option value="cohere-command">Cohere Command</option>
                                        <option value="gemini-pro" selected>Google Gemini</option>
                                    </select>
                                </div>
                                <span class="text-muted small">Continue this conversation</span>
                            </div>
                            
                            <form id="chatForm">
                                <div class="input-group">
                                    <textarea class="form-control bg-light" id="messageInput" rows="1" 
                                        placeholder="Type your message to continue..." 
                                        style="resize: none;"></textarea>
                                    <button class="btn btn-primary" type="submit" id="sendButton">
                                        <i class="fas fa-paper-plane"></i>
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', async function() {
        const chatId = window.location.pathname.split('/').pop();
        let chatModel = 'gemini-pro'; 
        
        try {
            const response = await fetch(`/api/ai/chats/${chatId}`);
            const data = await response.json();
            document.getElementById('loadingIndicator').classList.add('d-none');
            
            if (data.success) {
                document.getElementById('chatTitle').textContent = data.data.title;
                if (data.data.model) {
                    chatModel = data.data.model.toLowerCase();
                    if (chatModel.includes('cohere')) {
                        document.getElementById('modelSelect').value = 'cohere-command';
                    } else if (chatModel.includes('gemini')) {
                        document.getElementById('modelSelect').value = 'gemini-pro';
                    }
                }
                const chatContainer = document.getElementById('chatContainer');
                chatContainer.classList.remove('d-none');
                
                data.data.messages.forEach(message => {
                    if (message.role === 'user') {
                        chatContainer.innerHTML += `
                            <div class="d-flex flex-row-reverse mb-3">
                                <div class="rounded-circle bg-secondary text-white p-2 ms-2 d-none d-sm-flex" 
                                     style="width: 40px; height: 40px; align-items: center; justify-content: center;">
                                    Me
                                </div>
                                <div class="p-2 bg-primary text-white rounded" style="max-width: 80%;">
                                    <p class="mb-0">${message.content}</p>
                                    <small class="text-white-50">${new Date(message.timestamp).toLocaleTimeString()}</small>
                                </div>
                            </div>
                        `;
                    } else if (message.role === 'assistant') {
                        chatContainer.innerHTML += `
                            <div class="d-flex mb-3">
                                <div class="rounded-circle p-2 me-2 d-none d-sm-flex" 
                                     style="width: 40px; height: 40px; align-items: center; justify-content: center; overflow: hidden; border: 3px solid #4e73df;">
                                    <img src="/assets/img/vani.png" alt="AI" style="width: 100%; height: 100%; object-fit: cover;">
                                </div>
                                <div class="p-2 bg-light text-dark rounded" style="max-width: 80%;">
                                    <p class="mb-0">${formatResponse(message.content)}</p>
                                    <small class="text-muted">${new Date(message.timestamp).toLocaleTimeString()} â€¢ Powered by ${data.data.model}</small>
                                </div>
                            </div>
                        `;
                    }
                });
                chatContainer.scrollTop = chatContainer.scrollHeight;
                document.getElementById('continueChat').classList.remove('d-none');
                document.getElementById('messageInput').focus();
                
            } else {
                document.getElementById('errorContainer').classList.remove('d-none');
                document.getElementById('errorMessage').textContent = data.message || 'Failed to load chat history';
            }
        } catch (error) {
            console.error('Error fetching chat details:', error);
            document.getElementById('loadingIndicator').classList.add('d-none');
            document.getElementById('errorContainer').classList.remove('d-none');
        }
        
        document.getElementById('chatForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const messageInput = document.getElementById('messageInput');
            const message = messageInput.value.trim();
            const modelSelect = document.getElementById('modelSelect');
            const selectedModel = modelSelect.value;
            const chatContainer = document.getElementById('chatContainer');
            
            if (!message) return;
            
            chatContainer.innerHTML += `
                <div class="d-flex flex-row-reverse mb-3">
                    <div class="rounded-circle bg-secondary text-white p-2 ms-2 d-none d-sm-flex" 
                         style="width: 40px; height: 40px; align-items: center; justify-content: center;">
                        Me
                    </div>
                    <div class="p-2 bg-primary text-white rounded" style="max-width: 80%;">
                        <p class="mb-0">${message}</p>
                        <small class="text-white-50">${new Date().toLocaleTimeString()}</small>
                    </div>
                </div>
            `;
            
            messageInput.value = '';
            
            chatContainer.scrollTop = chatContainer.scrollHeight;
            
            const thinkingId = Date.now();
            chatContainer.innerHTML += `
                <div class="d-flex mb-3" id="thinking-${thinkingId}">
                    <div class="rounded-circle p-2 me-2 d-none d-sm-flex" 
                         style="width: 40px; height: 40px; align-items: center; justify-content: center; overflow: hidden; border: 3px solid #4e73df;">
                        <img src="/assets/img/vani.png" alt="AI" style="width: 100%; height: 100%; object-fit: cover;">
                    </div>
                    <div class="p-2 bg-light text-dark rounded" style="max-width: 80%;">
                        <p class="mb-0"><i class="fas fa-spinner fa-spin"></i> Thinking...</p>
                    </div>
                </div>
            `;
            
            chatContainer.scrollTop = chatContainer.scrollHeight;
            
            messageInput.disabled = true;
            document.getElementById('sendButton').disabled = true;
            
            try {
                const response = await fetch('/api/ai/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        message: message,
                        model: selectedModel,
                        chatId: chatId 
                    })
                });
                
                const data = await response.json();
                
                document.getElementById(`thinking-${thinkingId}`).remove();
                
                messageInput.disabled = false;
                document.getElementById('sendButton').disabled = false;
                messageInput.focus();
                
                if (data.success) {
                    chatContainer.innerHTML += `
                        <div class="d-flex mb-3">
                            <div class="rounded-circle p-2 me-2 d-none d-sm-flex" 
                                 style="width: 40px; height: 40px; align-items: center; justify-content: center; overflow: hidden; border: 3px solid #4e73df;">
                                <img src="/assets/img/vani.png" alt="AI" style="width: 100%; height: 100%; object-fit: cover;">
                            </div>
                            <div class="p-2 bg-light text-dark rounded" style="max-width: 80%;">
                                <p class="mb-0">${formatResponse(data.data.text)}</p>
                                <small class="text-muted">${new Date().toLocaleTimeString()} â€¢ Powered by ${data.data.model}</small>
                            </div>
                        </div>
                    `;
                } else {
                    chatContainer.innerHTML += `
                        <div class="d-flex mb-3">
                            <div class="rounded-circle bg-danger p-2 me-2 d-none d-sm-flex" 
                                 style="width: 40px; height: 40px; align-items: center; justify-content: center;">
                                !
                            </div>
                            <div class="p-2 bg-light text-danger rounded" style="max-width: 80%;">
                                <p class="mb-0">Error: ${data.message || 'Failed to generate response'}</p>
                            </div>
                        </div>
                    `;
                }
                
                chatContainer.scrollTop = chatContainer.scrollHeight;
                
            } catch (error) {
                console.error('Error continuing chat:', error);
                
                document.getElementById(`thinking-${thinkingId}`).remove();
                
                messageInput.disabled = false;
                document.getElementById('sendButton').disabled = false;
                
                chatContainer.innerHTML += `
                    <div class="d-flex mb-3">
                        <div class="rounded-circle bg-danger p-2 me-2 d-none d-sm-flex" 
                             style="width: 40px; height: 40px; align-items: center; justify-content: center;">
                            !
                        </div>
                        <div class="p-2 bg-light text-danger rounded" style="max-width: 80%;">
                            <p class="mb-0">Error: Could not connect to AI service</p>
                        </div>
                    </div>
                `;
                
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }
        });
        
        const messageInput = document.getElementById('messageInput');
        messageInput.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = (this.scrollHeight) + 'px';
        });
    });
    
    function formatResponse(text) {
        if (!text) return '';
        let formatted = text.replace(/\n/g, '<br>');
        formatted = formatted.replace(/```([a-z]*)\n([\s\S]*?)\n```/g, '<pre class="bg-dark text-light p-2"><code>$2</code></pre>');
        formatted = formatted.replace(/`([^`]+)`/g, '<code class="bg-dark text-light px-1">$1</code>');
        formatted = formatted.replace(/\*\*([^*]+)\*\*/g, '<strong>$1</strong>');
        formatted = formatted.replace(/\*([^*]+)\*/g, '<em>$1</em>');
        return formatted;
    }
</script>